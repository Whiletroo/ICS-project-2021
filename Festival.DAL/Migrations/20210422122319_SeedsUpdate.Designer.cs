// <auto-generated />
using System;
using Festival.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Festival.DAL.Migrations
{
    [DbContext(typeof(FestivalDbContext))]
    [Migration("20210422122319_SeedsUpdate")]
    partial class SeedsUpdate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Festival.DAL.Entity.BandEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Genre")
                        .HasColumnType("int");

                    b.Property<string>("LongDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OriginCountry")
                        .HasColumnType("int");

                    b.Property<string>("PhotoURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Bands");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1cb6fb2f-6c01-4bb4-b0b6-cb0d39c75daa"),
                            Genre = 12,
                            LongDescription = "The band was formed in 1981 in Los Angeles by vocalist/guitarist James Hetfield and drummer Lars Ulrich, and has been based in San Francisco for most of its career. The band's fast tempos, instrumentals and aggressive musicianship made them one of the founding big four bands of thrash metal, alongside Megadeth, Anthrax and Slayer. Metallica's current lineup comprises founding members and primary songwriters Hetfield and Ulrich, longtime lead guitarist Kirk Hammett, and bassist Robert Trujillo. Guitarist Dave Mustaine (who went on to form Megadeth after being fired from the band) and bassists Ron McGovney, Cliff Burton (who died in a bus accident in Sweden in 1986) and Jason Newsted are former members of the band.",
                            Name = "Metallica",
                            OriginCountry = 237,
                            PhotoURL = "MetallicaURL",
                            ShortDescription = "American heavy metal band"
                        });
                });

            modelBuilder.Entity("Festival.DAL.Entity.PerformanceEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndPerformanceTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("StageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartPerformanceTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BandId");

                    b.HasIndex("StageId");

                    b.ToTable("Performances");

                    b.HasData(
                        new
                        {
                            Id = new Guid("040fc4f3-6f46-40b4-83d8-90833cdf44a8"),
                            BandId = new Guid("1cb6fb2f-6c01-4bb4-b0b6-cb0d39c75daa"),
                            EndPerformanceTime = new DateTime(2021, 5, 6, 21, 30, 0, 0, DateTimeKind.Unspecified),
                            StageId = new Guid("bdbfaf5b-fe9f-4a01-be3e-5d41b2d5cc5b"),
                            StartPerformanceTime = new DateTime(2021, 5, 6, 20, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Festival.DAL.Entity.StageEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Stages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bdbfaf5b-fe9f-4a01-be3e-5d41b2d5cc5b"),
                            Name = "Stage A",
                            PhotoURL = "StageAURL",
                            ShortDescription = "Main Stage"
                        });
                });

            modelBuilder.Entity("Festival.DAL.Entity.PerformanceEntity", b =>
                {
                    b.HasOne("Festival.DAL.Entity.BandEntity", "Band")
                        .WithMany("Performances")
                        .HasForeignKey("BandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Festival.DAL.Entity.StageEntity", "Stage")
                        .WithMany("Performances")
                        .HasForeignKey("StageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Band");

                    b.Navigation("Stage");
                });

            modelBuilder.Entity("Festival.DAL.Entity.BandEntity", b =>
                {
                    b.Navigation("Performances");
                });

            modelBuilder.Entity("Festival.DAL.Entity.StageEntity", b =>
                {
                    b.Navigation("Performances");
                });
#pragma warning restore 612, 618
        }
    }
}
